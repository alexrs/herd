Loaded module: cuda/11.6
Loaded dependency [python3/3.11.4]: gcc/12.3.0-binutils-2.40
Loaded dependency [python3/3.11.4]: sqlite3/3.42.0
Loaded module: python3/3.11.4

Loading python3/3.11.4
  Loading requirement: gcc/12.3.0-binutils-2.40 sqlite3/3.42.0
Found cached dataset parquet (/work3/s212722/herd/datasets/cache/alexrs___parquet/alexrs--alpaca-cleaned-30-clusters-a73d614e768ecc90/0.0.0/14a00e99c0d15a23649d0db8944380ac81082d4b021f398733dd84f3a6c569a7)
Loading cached processed dataset at /work3/s212722/herd/datasets/cache/alexrs___parquet/alexrs--alpaca-cleaned-30-clusters-a73d614e768ecc90/0.0.0/14a00e99c0d15a23649d0db8944380ac81082d4b021f398733dd84f3a6c569a7/cache-dc5013c6f8f7757d.arrow
2023-11-01 21:39:03.386 | INFO     | herd.finetune_utils:get_peft_config:30 - Fine-tuning with MoLoRA using 30 experts
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:03<00:03,  3.32s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.12s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.30s/it]
2023-11-01 21:39:09.705 | WARNING  | herd.finetune:_finetune_experts:183 - Number of experts is not 1 but we are training an expert, setting it to 1. num_experts: 1
/zhome/03/c/164482/code/herd/.venv/lib/python3.11/site-packages/trl/trainer/utils.py:246: UserWarning: The passed formatting_func has more than one argument. Usually that function should have a single argument `example` which corresponds to the dictonnary returned by each element of the dataset. Make sure you know what you are doing.
  warnings.warn(
2023-11-01 21:39:43.360 | INFO     | herd.finetune:_finetune_experts:215 - Training expert: expert_22, output_dir: /work3/s212722/herd/meta-llama/Llama-2-7b-hf/alpaca-30/all_linear_paged_adam_4bit/molora/expert_22
wandb: Currently logged in as: alexrs95. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.12 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.10
wandb: Run data is saved locally in /zhome/03/c/164482/code/herd/wandb/run-20231101_213945-mh0wf76w
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run molora/expert_22
wandb: ⭐️ View project at https://wandb.ai/alexrs95/herd-llama
wandb: 🚀 View run at https://wandb.ai/alexrs95/herd-llama/runs/mh0wf76w
  0%|          | 0/624 [00:00<?, ?it/s]You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
  0%|          | 1/624 [00:06<1:11:00,  6.84s/it]  0%|          | 2/624 [00:12<1:05:04,  6.28s/it]  0%|          | 3/624 [00:18<1:03:11,  6.10s/it]  1%|          | 4/624 [00:24<1:02:16,  6.03s/it]  1%|          | 5/624 [00:30<1:01:46,  5.99s/it]  1%|          | 6/624 [00:36<1:01:25,  5.96s/it]  1%|          | 7/624 [00:42<1:01:11,  5.95s/it]  1%|▏         | 8/624 [00:48<1:01:01,  5.94s/it]  1%|▏         | 9/624 [00:54<1:00:53,  5.94s/it]  2%|▏         | 10/624 [01:00<1:00:47,  5.94s/it]                                                    2%|▏         | 10/624 [01:00<1:00:47,  5.94s/it]  2%|▏         | 11/624 [01:06<1:00:41,  5.94s/it]  2%|▏         | 12/624 [01:12<1:00:47,  5.96s/it]  2%|▏         | 13/624 [01:17<1:00:36,  5.95s/it]  2%|▏         | 14/624 [01:23<1:00:29,  5.95s/it]  2%|▏         | 15/624 [01:29<1:00:21,  5.95s/it]  3%|▎         | 16/624 [01:35<1:00:14,  5.94s/it]  3%|▎         | 17/624 [01:41<1:00:08,  5.94s/it]  3%|▎         | 18/624 [01:47<1:00:02,  5.94s/it]  3%|▎         | 19/624 [01:53<59:56,  5.94s/it]    3%|▎         | 20/624 [01:59<59:50,  5.95s/it]                                                  3%|▎         | 20/624 [01:59<59:50,  5.95s/it]  3%|▎         | 21/624 [02:05<59:46,  5.95s/it]  4%|▎         | 22/624 [02:11<59:41,  5.95s/it]  4%|▎         | 23/624 [02:17<59:35,  5.95s/it]  4%|▍         | 24/624 [02:23<59:29,  5.95s/it]  4%|▍         | 25/624 [02:29<59:23,  5.95s/it]  4%|▍         | 26/624 [02:35<59:18,  5.95s/it]  4%|▍         | 27/624 [02:41<59:11,  5.95s/it]  4%|▍         | 28/624 [02:47<1:01:03,  6.15s/it]  5%|▍         | 29/624 [02:53<1:00:21,  6.09s/it]  5%|▍         | 30/624 [02:59<59:50,  6.05s/it]                                                    5%|▍         | 30/624 [02:59<59:50,  6.05s/it]  5%|▍         | 31/624 [03:05<59:30,  6.02s/it]  5%|▌         | 32/624 [03:11<59:12,  6.00s/it]  5%|▌         | 33/624 [03:17<58:56,  5.98s/it]  5%|▌         | 34/624 [03:23<58:44,  5.97s/it]  6%|▌         | 35/624 [03:29<58:34,  5.97s/it]  6%|▌         | 36/624 [03:35<58:25,  5.96s/it]  6%|▌         | 37/624 [03:41<58:17,  5.96s/it]  6%|▌         | 38/624 [03:47<58:10,  5.96s/it]  6%|▋         | 39/624 [03:53<58:03,  5.95s/it]  6%|▋         | 40/624 [03:59<57:56,  5.95s/it]                                                  6%|▋         | 40/624 [03:59<57:56,  5.95s/it]  7%|▋         | 41/624 [04:05<57:50,  5.95s/it]  7%|▋         | 42/624 [04:11<57:44,  5.95s/it]  7%|▋         | 43/624 [04:17<57:38,  5.95s/it]  7%|▋         | 44/624 [04:23<57:32,  5.95s/it]  7%|▋         | 45/624 [04:29<57:26,  5.95s/it]  7%|▋         | 46/624 [04:34<57:20,  5.95s/it]  8%|▊         | 47/624 [04:40<57:14,  5.95s/it]  8%|▊         | 48/624 [04:46<57:07,  5.95s/it]  8%|▊         | 49/624 [04:52<57:01,  5.95s/it]  8%|▊         | 50/624 [04:58<56:55,  5.95s/it]                                                  8%|▊         | 50/624 [04:58<56:55,  5.95s/it]  8%|▊         | 51/624 [05:04<56:51,  5.95s/it]  8%|▊         | 52/624 [05:10<56:44,  5.95s/it]  8%|▊         | 53/624 [05:16<56:38,  5.95s/it]  9%|▊         | 54/624 [05:22<56:32,  5.95s/it]  9%|▉         | 55/624 [05:28<56:27,  5.95s/it]                                                  9%|▉         | 55/624 [05:28<56:27,  5.95s/it]  9%|▉         | 55/624 [05:28<56:43,  5.98s/it]
wandb: Waiting for W&B process to finish... (success).
wandb: 
wandb: Run history:
wandb:                    train/epoch ▁▁▇███
wandb:              train/global_step ▁▃▄▆▇█
wandb:            train/learning_rate ▁▁▁▁▁
wandb:                     train/loss █▇▆▁▁
wandb:               train/total_flos ▁
wandb:               train/train_loss ▁
wandb:            train/train_runtime ▁
wandb: train/train_samples_per_second ▁
wandb:   train/train_steps_per_second ▁
wandb: 
wandb: Run summary:
wandb:                    train/epoch 1.09
wandb:              train/global_step 55
wandb:            train/learning_rate 0.0003
wandb:                     train/loss 0.4298
wandb:               train/total_flos 1.791914338418688e+16
wandb:               train/train_loss 0.60461
wandb:            train/train_runtime 331.4434
wandb: train/train_samples_per_second 7.543
wandb:   train/train_steps_per_second 1.883
wandb: 
wandb: 🚀 View run molora/expert_22 at: https://wandb.ai/alexrs95/herd-llama/runs/mh0wf76w
wandb: ️⚡ View job at https://wandb.ai/alexrs95/herd-llama/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjk5NjEyNzE2/version_details/v15
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20231101_213945-mh0wf76w/logs
