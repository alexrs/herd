MoloraConfig(peft_type=<PeftType.MOLORA: 'MOLORA'>, auto_mapping=None, base_model_name_or_path=None, revision=None, task_type='CAUSAL_LM', inference_mode=False, r=8, target_modules=['q_proj', 'up_proj', 'o_proj', 'k_proj', 'down_proj', 'gate_proj', 'v_proj'], lora_alpha=16, lora_dropout=0.1, fan_in_fan_out=False, bias='none', modules_to_save=None, init_lora_weights=True, layers_to_transform=None, layers_pattern=None, rank_pattern={}, alpha_pattern={}, num_experts=30, only_router=True, train_single_expert=False, experts_to_combine=['expert_0', 'expert_1', 'expert_2', 'expert_3', 'expert_4', 'expert_5', 'expert_6', 'expert_7', 'expert_8', 'expert_9', 'expert_10', 'expert_11', 'expert_12', 'expert_13', 'expert_14', 'expert_15', 'expert_16', 'expert_17', 'expert_18', 'expert_19', 'expert_20', 'expert_21', 'expert_22', 'expert_23', 'expert_24', 'expert_25', 'expert_26', 'expert_27', 'expert_28', 'expert_29'], top_k=0, top_p=0.0, self_attn_router=False)
PeftModelForCausalLM(
  (base_model): MoloraModel(
    (model): LlamaForCausalLM(
      (model): LlamaModel(
        (embed_tokens): Embedding(32000, 4096)
        (layers): ModuleList(
          (0-31): 32 x LlamaDecoderLayer(
            (self_attn): LlamaAttention(
              (q_proj): Linear4bit(
                in_features=4096, out_features=4096, bias=False
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x4096x8 (GPU 0)])
                (lora_B): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x8x4096 (GPU 0)])
                (lora_router): ModuleDict(
                  (default): Linear(in_features=4096, out_features=30, bias=True)
                )
              )
              (k_proj): Linear4bit(
                in_features=4096, out_features=4096, bias=False
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x4096x8 (GPU 0)])
                (lora_B): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x8x4096 (GPU 0)])
                (lora_router): ModuleDict(
                  (default): Linear(in_features=4096, out_features=30, bias=True)
                )
              )
              (v_proj): Linear4bit(
                in_features=4096, out_features=4096, bias=False
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x4096x8 (GPU 0)])
                (lora_B): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x8x4096 (GPU 0)])
                (lora_router): ModuleDict(
                  (default): Linear(in_features=4096, out_features=30, bias=True)
                )
              )
              (o_proj): Linear4bit(
                in_features=4096, out_features=4096, bias=False
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x4096x8 (GPU 0)])
                (lora_B): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x8x4096 (GPU 0)])
                (lora_router): ModuleDict(
                  (default): Linear(in_features=4096, out_features=30, bias=True)
                )
              )
              (rotary_emb): LlamaRotaryEmbedding()
            )
            (mlp): LlamaMLP(
              (gate_proj): Linear4bit(
                in_features=4096, out_features=11008, bias=False
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x4096x8 (GPU 0)])
                (lora_B): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x8x11008 (GPU 0)])
                (lora_router): ModuleDict(
                  (default): Linear(in_features=4096, out_features=30, bias=True)
                )
              )
              (up_proj): Linear4bit(
                in_features=4096, out_features=11008, bias=False
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x4096x8 (GPU 0)])
                (lora_B): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x8x11008 (GPU 0)])
                (lora_router): ModuleDict(
                  (default): Linear(in_features=4096, out_features=30, bias=True)
                )
              )
              (down_proj): Linear4bit(
                in_features=11008, out_features=4096, bias=False
                (lora_dropout): ModuleDict(
                  (default): Dropout(p=0.1, inplace=False)
                )
                (lora_A): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x11008x8 (GPU 0)])
                (lora_B): ParameterDict(  (default): Parameter containing: [torch.cuda.FloatTensor of size 30x8x4096 (GPU 0)])
                (lora_router): ModuleDict(
                  (default): Linear(in_features=11008, out_features=30, bias=True)
                )
              )
              (act_fn): SiLUActivation()
            )
            (input_layernorm): LlamaRMSNorm()
            (post_attention_layernorm): LlamaRMSNorm()
          )
        )
        (norm): LlamaRMSNorm()
      )
      (lm_head): Linear(in_features=4096, out_features=32000, bias=False)
    )
  )
)
