Loaded module: cuda/11.6
Loaded dependency [python3/3.11.4]: gcc/12.3.0-binutils-2.40
Loaded dependency [python3/3.11.4]: sqlite3/3.42.0
Loaded module: python3/3.11.4

Loading python3/3.11.4
  Loading requirement: gcc/12.3.0-binutils-2.40 sqlite3/3.42.0
Found cached dataset parquet (/work3/s212722/herd/datasets/cache/alexrs___parquet/alexrs--alpaca-cleaned-15-clusters-dc700effb75224a8/0.0.0/14a00e99c0d15a23649d0db8944380ac81082d4b021f398733dd84f3a6c569a7)
Filter:   0%|          | 0/51760 [00:00<?, ? examples/s]Filter:   2%|▏         | 1000/51760 [00:00<00:12, 3928.02 examples/s]Filter:  17%|█▋        | 9000/51760 [00:00<00:01, 28263.34 examples/s]Filter:  33%|███▎      | 17000/51760 [00:00<00:00, 41991.34 examples/s]Filter:  48%|████▊     | 25000/51760 [00:00<00:00, 50722.58 examples/s]Filter:  62%|██████▏   | 32000/51760 [00:00<00:00, 54245.67 examples/s]Filter:  77%|███████▋  | 40000/51760 [00:00<00:00, 56788.85 examples/s]Filter:  91%|█████████ | 47000/51760 [00:00<00:00, 57060.68 examples/s]                                                                       2023-10-28 18:07:16.400 | INFO     | herd.finetune_utils:get_peft_config:30 - Fine-tuning with MoLoRA using 15 experts
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:03<00:03,  3.30s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.06s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.25s/it]
2023-10-28 18:07:22.659 | WARNING  | herd.finetune:_finetune_experts:174 - Number of experts is not 1 but we are training an expert, setting it to 1. num_experts: 1
/zhome/03/c/164482/code/herd/.venv/lib/python3.11/site-packages/trl/trainer/utils.py:246: UserWarning: The passed formatting_func has more than one argument. Usually that function should have a single argument `example` which corresponds to the dictonnary returned by each element of the dataset. Make sure you know what you are doing.
  warnings.warn(
2023-10-28 18:07:56.502 | INFO     | herd.finetune:_finetune_experts:206 - Training expert: expert_9, output_dir: /work3/s212722/herd/meta-llama/Llama-2-7b-hf/alpaca-15/all_linear_paged_adam_no_quant/molora/expert_9
wandb: Currently logged in as: alexrs95. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.12 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.10
wandb: Run data is saved locally in /zhome/03/c/164482/code/herd/wandb/run-20231028_180758-dpwg3mzx
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run molora/expert_9
wandb: ⭐️ View project at https://wandb.ai/alexrs95/herd-llama
wandb: 🚀 View run at https://wandb.ai/alexrs95/herd-llama/runs/dpwg3mzx
  0%|          | 0/408 [00:00<?, ?it/s]You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
  0%|          | 1/408 [00:12<1:21:44, 12.05s/it]  0%|          | 2/408 [00:23<1:17:40, 11.48s/it]  1%|          | 3/408 [00:34<1:16:19, 11.31s/it]  1%|          | 4/408 [00:45<1:15:40, 11.24s/it]  1%|          | 5/408 [00:56<1:15:16, 11.21s/it]  1%|▏         | 6/408 [01:07<1:15:00, 11.20s/it]  2%|▏         | 7/408 [01:18<1:14:48, 11.19s/it]  2%|▏         | 8/408 [01:30<1:14:38, 11.20s/it]  2%|▏         | 9/408 [01:41<1:14:29, 11.20s/it]  2%|▏         | 10/408 [01:52<1:14:22, 11.21s/it]                                                    2%|▏         | 10/408 [01:52<1:14:22, 11.21s/it]  3%|▎         | 11/408 [02:03<1:14:14, 11.22s/it]  3%|▎         | 12/408 [02:15<1:14:07, 11.23s/it]  3%|▎         | 13/408 [02:26<1:13:59, 11.24s/it]  3%|▎         | 14/408 [02:37<1:13:51, 11.25s/it]  4%|▎         | 15/408 [02:48<1:13:42, 11.25s/it]  4%|▍         | 16/408 [03:00<1:13:34, 11.26s/it]  4%|▍         | 17/408 [03:11<1:13:26, 11.27s/it]  4%|▍         | 18/408 [03:22<1:13:17, 11.27s/it]  5%|▍         | 19/408 [03:33<1:13:07, 11.28s/it]  5%|▍         | 20/408 [03:45<1:12:58, 11.28s/it]                                                    5%|▍         | 20/408 [03:45<1:12:58, 11.28s/it]  5%|▌         | 21/408 [03:56<1:12:48, 11.29s/it]  5%|▌         | 22/408 [04:07<1:12:38, 11.29s/it]  6%|▌         | 23/408 [04:15<1:04:50, 10.10s/it]  6%|▌         | 24/408 [04:27<1:09:46, 10.90s/it]  6%|▌         | 25/408 [04:39<1:10:19, 11.02s/it]  6%|▋         | 26/408 [04:50<1:10:39, 11.10s/it]  7%|▋         | 27/408 [05:01<1:10:51, 11.16s/it]  7%|▋         | 28/408 [05:13<1:10:55, 11.20s/it]  7%|▋         | 29/408 [05:24<1:10:55, 11.23s/it]  7%|▋         | 30/408 [05:35<1:10:52, 11.25s/it]                                                    7%|▋         | 30/408 [05:35<1:10:52, 11.25s/it]  8%|▊         | 31/408 [05:47<1:10:46, 11.26s/it]  8%|▊         | 32/408 [05:58<1:10:39, 11.28s/it]  8%|▊         | 33/408 [06:09<1:10:31, 11.28s/it]  8%|▊         | 34/408 [06:20<1:10:22, 11.29s/it]  9%|▊         | 35/408 [06:32<1:10:12, 11.29s/it]  9%|▉         | 36/408 [06:43<1:10:02, 11.30s/it]  9%|▉         | 37/408 [06:54<1:09:51, 11.30s/it]  9%|▉         | 38/408 [07:06<1:09:40, 11.30s/it] 10%|▉         | 39/408 [07:17<1:09:29, 11.30s/it] 10%|▉         | 40/408 [07:28<1:09:18, 11.30s/it]                                                   10%|▉         | 40/408 [07:28<1:09:18, 11.30s/it] 10%|█         | 41/408 [07:40<1:09:07, 11.30s/it] 10%|█         | 42/408 [07:51<1:08:56, 11.30s/it] 11%|█         | 43/408 [08:02<1:08:45, 11.30s/it] 11%|█         | 44/408 [08:13<1:08:34, 11.30s/it] 11%|█         | 45/408 [08:25<1:08:23, 11.30s/it] 11%|█▏        | 46/408 [08:32<1:01:02, 10.12s/it]                                                   11%|█▏        | 46/408 [08:33<1:01:02, 10.12s/it] 11%|█▏        | 46/408 [08:33<1:07:23, 11.17s/it]
wandb: Waiting for W&B process to finish... (success).
wandb: 
wandb: Run history:
wandb:                    train/epoch ▁▁▇██
wandb:              train/global_step ▁▃▅▇█
wandb:            train/learning_rate ▁▁▁▁
wandb:                     train/loss ██▄▁
wandb:               train/total_flos ▁
wandb:               train/train_loss ▁
wandb:            train/train_runtime ▁
wandb: train/train_samples_per_second ▁
wandb:   train/train_steps_per_second ▁
wandb: 
wandb: Run summary:
wandb:                    train/epoch 1.11
wandb:              train/global_step 46
wandb:            train/learning_rate 0.0003
wandb:                     train/loss 0.4771
wandb:               train/total_flos 2.957404980825293e+16
wandb:               train/train_loss 0.70418
wandb:            train/train_runtime 516.0661
wandb: train/train_samples_per_second 6.313
wandb:   train/train_steps_per_second 0.791
wandb: 
wandb: 🚀 View run molora/expert_9 at: https://wandb.ai/alexrs95/herd-llama/runs/dpwg3mzx
wandb: ️⚡ View job at https://wandb.ai/alexrs95/herd-llama/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjk5NjEyNzE2/version_details/v13
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20231028_180758-dpwg3mzx/logs
