Loaded module: cuda/11.6
Loaded dependency [python3/3.11.4]: gcc/12.3.0-binutils-2.40
Loaded dependency [python3/3.11.4]: sqlite3/3.42.0
Loaded module: python3/3.11.4

Loading python3/3.11.4
  Loading requirement: gcc/12.3.0-binutils-2.40 sqlite3/3.42.0
Found cached dataset parquet (/work3/s212722/herd/datasets/cache/alexrs___parquet/alexrs--alpaca-cleaned-15-clusters-dc700effb75224a8/0.0.0/14a00e99c0d15a23649d0db8944380ac81082d4b021f398733dd84f3a6c569a7)
Filter:   0%|          | 0/51760 [00:00<?, ? examples/s]Filter:   2%|▏         | 1000/51760 [00:00<00:13, 3849.26 examples/s]Filter:  12%|█▏        | 6000/51760 [00:00<00:02, 18467.23 examples/s]Filter:  21%|██▏       | 11000/51760 [00:00<00:01, 25521.54 examples/s]Filter:  31%|███       | 16000/51760 [00:00<00:01, 29871.73 examples/s]Filter:  39%|███▊      | 20000/51760 [00:00<00:00, 31968.52 examples/s]Filter:  50%|█████     | 26000/51760 [00:00<00:00, 36011.40 examples/s]Filter:  62%|██████▏   | 32000/51760 [00:01<00:00, 38571.89 examples/s]Filter:  73%|███████▎  | 38000/51760 [00:01<00:00, 40081.73 examples/s]Filter:  83%|████████▎ | 43000/51760 [00:01<00:00, 40779.75 examples/s]Filter:  93%|█████████▎| 48000/51760 [00:01<00:00, 41519.77 examples/s]                                                                       2023-10-28 16:03:52.450 | INFO     | herd.finetune_utils:get_peft_config:30 - Fine-tuning with MoLoRA using 15 experts
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [01:15<01:15, 75.90s/it]Loading checkpoint shards: 100%|██████████| 2/2 [01:17<00:00, 31.95s/it]Loading checkpoint shards: 100%|██████████| 2/2 [01:17<00:00, 38.54s/it]
2023-10-28 16:05:12.540 | WARNING  | herd.finetune:_finetune_experts:174 - Number of experts is not 1 but we are training an expert, setting it to 1. num_experts: 1
/zhome/03/c/164482/code/herd/.venv/lib/python3.11/site-packages/trl/trainer/utils.py:246: UserWarning: The passed formatting_func has more than one argument. Usually that function should have a single argument `example` which corresponds to the dictonnary returned by each element of the dataset. Make sure you know what you are doing.
  warnings.warn(
2023-10-28 16:05:46.213 | INFO     | herd.finetune:_finetune_experts:206 - Training expert: expert_2, output_dir: /work3/s212722/herd/meta-llama/Llama-2-7b-hf/alpaca-15/all_linear_paged_adam_no_quant/molora/expert_2
wandb: Currently logged in as: alexrs95. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.12 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.10
wandb: Run data is saved locally in /zhome/03/c/164482/code/herd/wandb/run-20231028_160548-v98uckx4
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run molora/expert_2
wandb: ⭐️ View project at https://wandb.ai/alexrs95/herd-llama
wandb: 🚀 View run at https://wandb.ai/alexrs95/herd-llama/runs/v98uckx4
  0%|          | 0/828 [00:00<?, ?it/s]You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
  0%|          | 1/828 [00:12<2:53:07, 12.56s/it]  0%|          | 2/828 [00:23<2:40:32, 11.66s/it]  0%|          | 3/828 [00:34<2:36:38, 11.39s/it]  0%|          | 4/828 [00:45<2:34:51, 11.28s/it]  1%|          | 5/828 [00:56<2:33:54, 11.22s/it]  1%|          | 6/828 [01:08<2:33:20, 11.19s/it]  1%|          | 7/828 [01:19<2:33:00, 11.18s/it]  1%|          | 8/828 [01:30<2:32:50, 11.18s/it]  1%|          | 9/828 [01:41<2:32:43, 11.19s/it]  1%|          | 10/828 [01:52<2:32:37, 11.19s/it]                                                    1%|          | 10/828 [01:52<2:32:37, 11.19s/it]  1%|▏         | 11/828 [02:04<2:32:34, 11.20s/it]  1%|▏         | 12/828 [02:15<2:32:30, 11.21s/it]  2%|▏         | 13/828 [02:26<2:32:26, 11.22s/it]  2%|▏         | 14/828 [02:37<2:32:24, 11.23s/it]  2%|▏         | 15/828 [02:49<2:32:20, 11.24s/it]  2%|▏         | 16/828 [03:00<2:32:16, 11.25s/it]  2%|▏         | 17/828 [03:11<2:32:10, 11.26s/it]  2%|▏         | 18/828 [03:22<2:32:05, 11.27s/it]  2%|▏         | 19/828 [03:34<2:31:59, 11.27s/it]  2%|▏         | 20/828 [03:45<2:31:52, 11.28s/it]                                                    2%|▏         | 20/828 [03:45<2:31:52, 11.28s/it]  3%|▎         | 21/828 [03:56<2:31:45, 11.28s/it]  3%|▎         | 22/828 [04:08<2:31:39, 11.29s/it]  3%|▎         | 23/828 [04:19<2:31:30, 11.29s/it]  3%|▎         | 24/828 [04:30<2:31:21, 11.30s/it]  3%|▎         | 25/828 [04:41<2:31:11, 11.30s/it]  3%|▎         | 26/828 [04:53<2:31:03, 11.30s/it]  3%|▎         | 27/828 [05:04<2:30:54, 11.30s/it]  3%|▎         | 28/828 [05:15<2:30:44, 11.31s/it]  4%|▎         | 29/828 [05:27<2:30:33, 11.31s/it]  4%|▎         | 30/828 [05:38<2:30:22, 11.31s/it]                                                    4%|▎         | 30/828 [05:38<2:30:22, 11.31s/it]  4%|▎         | 31/828 [05:49<2:30:12, 11.31s/it]  4%|▍         | 32/828 [06:01<2:30:01, 11.31s/it]  4%|▍         | 33/828 [06:12<2:29:51, 11.31s/it]  4%|▍         | 34/828 [06:23<2:29:40, 11.31s/it]  4%|▍         | 35/828 [06:35<2:29:30, 11.31s/it]  4%|▍         | 36/828 [06:46<2:29:20, 11.31s/it]  4%|▍         | 37/828 [06:57<2:29:09, 11.31s/it]  5%|▍         | 38/828 [07:08<2:28:58, 11.31s/it]  5%|▍         | 39/828 [07:20<2:28:49, 11.32s/it]  5%|▍         | 40/828 [07:31<2:28:38, 11.32s/it]                                                    5%|▍         | 40/828 [07:31<2:28:38, 11.32s/it]  5%|▍         | 41/828 [07:42<2:28:28, 11.32s/it]  5%|▌         | 42/828 [07:54<2:28:16, 11.32s/it]  5%|▌         | 43/828 [08:05<2:28:04, 11.32s/it]  5%|▌         | 44/828 [08:16<2:27:52, 11.32s/it]  5%|▌         | 45/828 [08:28<2:27:41, 11.32s/it]  6%|▌         | 46/828 [08:39<2:27:30, 11.32s/it]  6%|▌         | 47/828 [08:50<2:27:20, 11.32s/it]  6%|▌         | 48/828 [09:02<2:27:09, 11.32s/it]  6%|▌         | 49/828 [09:13<2:26:58, 11.32s/it]  6%|▌         | 50/828 [09:24<2:26:44, 11.32s/it]                                                    6%|▌         | 50/828 [09:24<2:26:44, 11.32s/it]  6%|▌         | 51/828 [09:36<2:26:32, 11.32s/it]  6%|▋         | 52/828 [09:47<2:26:21, 11.32s/it]  6%|▋         | 53/828 [09:58<2:26:09, 11.32s/it]  7%|▋         | 54/828 [10:10<2:25:58, 11.32s/it]  7%|▋         | 55/828 [10:21<2:25:46, 11.32s/it]  7%|▋         | 56/828 [10:32<2:25:34, 11.31s/it]  7%|▋         | 57/828 [10:43<2:25:22, 11.31s/it]  7%|▋         | 58/828 [10:55<2:25:10, 11.31s/it]  7%|▋         | 59/828 [11:06<2:24:59, 11.31s/it]  7%|▋         | 60/828 [11:17<2:24:46, 11.31s/it]                                                    7%|▋         | 60/828 [11:17<2:24:46, 11.31s/it]  7%|▋         | 61/828 [11:29<2:24:35, 11.31s/it]  7%|▋         | 62/828 [11:36<2:09:15, 10.13s/it]  8%|▊         | 63/828 [11:49<2:20:57, 11.06s/it]  8%|▊         | 64/828 [12:01<2:21:50, 11.14s/it]  8%|▊         | 65/828 [12:12<2:22:17, 11.19s/it]  8%|▊         | 66/828 [12:23<2:22:33, 11.22s/it]  8%|▊         | 67/828 [12:35<2:22:41, 11.25s/it]  8%|▊         | 68/828 [12:46<2:22:43, 11.27s/it]  8%|▊         | 69/828 [12:57<2:22:40, 11.28s/it]  8%|▊         | 70/828 [13:09<2:22:36, 11.29s/it]                                                    8%|▊         | 70/828 [13:09<2:22:36, 11.29s/it]  9%|▊         | 71/828 [13:20<2:22:30, 11.29s/it]  9%|▊         | 72/828 [13:31<2:22:23, 11.30s/it]  9%|▉         | 73/828 [13:42<2:22:14, 11.30s/it]  9%|▉         | 74/828 [13:54<2:22:03, 11.30s/it]  9%|▉         | 75/828 [14:05<2:21:53, 11.31s/it]  9%|▉         | 76/828 [14:16<2:21:43, 11.31s/it]  9%|▉         | 77/828 [14:28<2:21:33, 11.31s/it]  9%|▉         | 78/828 [14:39<2:21:22, 11.31s/it] 10%|▉         | 79/828 [14:50<2:21:11, 11.31s/it] 10%|▉         | 80/828 [15:02<2:20:59, 11.31s/it]                                                   10%|▉         | 80/828 [15:02<2:20:59, 11.31s/it] 10%|▉         | 81/828 [15:13<2:20:49, 11.31s/it] 10%|▉         | 82/828 [15:24<2:20:38, 11.31s/it] 10%|█         | 83/828 [15:36<2:20:26, 11.31s/it] 10%|█         | 84/828 [15:47<2:20:14, 11.31s/it] 10%|█         | 85/828 [15:58<2:20:03, 11.31s/it] 10%|█         | 86/828 [16:09<2:19:51, 11.31s/it] 11%|█         | 87/828 [16:21<2:19:40, 11.31s/it] 11%|█         | 88/828 [16:32<2:19:28, 11.31s/it] 11%|█         | 89/828 [16:43<2:19:16, 11.31s/it] 11%|█         | 90/828 [16:55<2:19:05, 11.31s/it]                                                   11%|█         | 90/828 [16:55<2:19:05, 11.31s/it] 11%|█         | 91/828 [17:06<2:18:53, 11.31s/it] 11%|█         | 92/828 [17:17<2:18:41, 11.31s/it] 11%|█         | 93/828 [17:29<2:18:32, 11.31s/it] 11%|█▏        | 94/828 [17:40<2:18:20, 11.31s/it] 11%|█▏        | 95/828 [17:51<2:18:08, 11.31s/it] 12%|█▏        | 96/828 [18:03<2:17:57, 11.31s/it] 12%|█▏        | 97/828 [18:14<2:17:45, 11.31s/it] 12%|█▏        | 98/828 [18:25<2:17:34, 11.31s/it] 12%|█▏        | 99/828 [18:36<2:17:23, 11.31s/it] 12%|█▏        | 100/828 [18:48<2:17:12, 11.31s/it]                                                    12%|█▏        | 100/828 [18:48<2:17:12, 11.31s/it] 12%|█▏        | 101/828 [18:59<2:17:01, 11.31s/it] 12%|█▏        | 102/828 [19:10<2:16:49, 11.31s/it] 12%|█▏        | 103/828 [19:22<2:16:38, 11.31s/it] 13%|█▎        | 104/828 [19:33<2:16:27, 11.31s/it] 13%|█▎        | 105/828 [19:44<2:16:16, 11.31s/it] 13%|█▎        | 106/828 [19:56<2:16:05, 11.31s/it] 13%|█▎        | 107/828 [20:07<2:15:54, 11.31s/it] 13%|█▎        | 108/828 [20:18<2:15:42, 11.31s/it] 13%|█▎        | 109/828 [20:30<2:15:31, 11.31s/it] 13%|█▎        | 110/828 [20:41<2:15:20, 11.31s/it]                                                    13%|█▎        | 110/828 [20:41<2:15:20, 11.31s/it] 13%|█▎        | 111/828 [20:52<2:15:09, 11.31s/it] 14%|█▎        | 112/828 [21:03<2:14:57, 11.31s/it] 14%|█▎        | 113/828 [21:15<2:14:46, 11.31s/it] 14%|█▍        | 114/828 [21:26<2:14:34, 11.31s/it] 14%|█▍        | 115/828 [21:37<2:14:21, 11.31s/it] 14%|█▍        | 116/828 [21:49<2:14:10, 11.31s/it] 14%|█▍        | 117/828 [22:00<2:13:58, 11.31s/it] 14%|█▍        | 118/828 [22:11<2:13:47, 11.31s/it] 14%|█▍        | 119/828 [22:23<2:13:37, 11.31s/it] 14%|█▍        | 120/828 [22:34<2:13:25, 11.31s/it]                                                    14%|█▍        | 120/828 [22:34<2:13:25, 11.31s/it] 15%|█▍        | 121/828 [22:45<2:13:13, 11.31s/it] 15%|█▍        | 122/828 [22:57<2:13:04, 11.31s/it] 15%|█▍        | 123/828 [23:08<2:12:52, 11.31s/it] 15%|█▍        | 124/828 [23:15<1:58:47, 10.12s/it]                                                    15%|█▍        | 124/828 [23:16<1:58:47, 10.12s/it] 15%|█▍        | 124/828 [23:16<2:12:10, 11.27s/it]
wandb: Waiting for W&B process to finish... (success).
wandb: - 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: \ 0.005 MB of 0.018 MB uploaded (0.000 MB deduped)wandb: | 0.005 MB of 0.018 MB uploaded (0.000 MB deduped)wandb: / 0.005 MB of 0.018 MB uploaded (0.000 MB deduped)wandb: - 0.005 MB of 0.018 MB uploaded (0.000 MB deduped)wandb: 
wandb: Run history:
wandb:                    train/epoch ▁▁▁▁▂▂▇▇█████
wandb:              train/global_step ▁▂▂▃▃▄▅▅▆▇▇██
wandb:            train/learning_rate ▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     train/loss ██████▃▁▁▁▂▂
wandb:               train/total_flos ▁
wandb:               train/train_loss ▁
wandb:            train/train_runtime ▁
wandb: train/train_samples_per_second ▁
wandb:   train/train_steps_per_second ▁
wandb: 
wandb: Run summary:
wandb:                    train/epoch 1.15
wandb:              train/global_step 124
wandb:            train/learning_rate 0.0003
wandb:                     train/loss 0.5753
wandb:               train/total_flos 8.055252240590438e+16
wandb:               train/train_loss 0.73726
wandb:            train/train_runtime 1399.3705
wandb: train/train_samples_per_second 4.732
wandb:   train/train_steps_per_second 0.592
wandb: 
wandb: 🚀 View run molora/expert_2 at: https://wandb.ai/alexrs95/herd-llama/runs/v98uckx4
wandb: ️⚡ View job at https://wandb.ai/alexrs95/herd-llama/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjk5NjEyNzE2/version_details/v13
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20231028_160548-v98uckx4/logs
