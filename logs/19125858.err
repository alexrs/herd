Loaded module: cuda/11.6
Loaded dependency [python3/3.11.4]: gcc/12.3.0-binutils-2.40
Loaded dependency [python3/3.11.4]: sqlite3/3.42.0
Loaded module: python3/3.11.4

Loading python3/3.11.4
  Loading requirement: gcc/12.3.0-binutils-2.40 sqlite3/3.42.0
Found cached dataset parquet (/work3/s212722/herd/datasets/cache/alexrs___parquet/alexrs--alpaca-cleaned-30-clusters-a73d614e768ecc90/0.0.0/14a00e99c0d15a23649d0db8944380ac81082d4b021f398733dd84f3a6c569a7)
Loading cached processed dataset at /work3/s212722/herd/datasets/cache/alexrs___parquet/alexrs--alpaca-cleaned-30-clusters-a73d614e768ecc90/0.0.0/14a00e99c0d15a23649d0db8944380ac81082d4b021f398733dd84f3a6c569a7/cache-71fb15d6989c5f39.arrow
2023-11-02 14:51:25.715 | INFO     | herd.finetune_utils:get_peft_config:30 - Fine-tuning with MoLoRA using 30 experts
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:03<00:03,  3.33s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.09s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.28s/it]
2023-11-02 14:51:35.953 | WARNING  | herd.finetune:_finetune_experts:183 - Number of experts is not 1 but we are training an expert, setting it to 1. num_experts: 1
/zhome/03/c/164482/code/herd/.venv/lib/python3.11/site-packages/trl/trainer/utils.py:246: UserWarning: The passed formatting_func has more than one argument. Usually that function should have a single argument `example` which corresponds to the dictonnary returned by each element of the dataset. Make sure you know what you are doing.
  warnings.warn(
2023-11-02 14:52:09.604 | INFO     | herd.finetune:_finetune_experts:215 - Training expert: expert_14, output_dir: /work3/s212722/herd/meta-llama/Llama-2-7b-hf/alpaca-30/all_linear_paged_adam_4bit/molora/expert_14
wandb: Currently logged in as: alexrs95. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.12 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.10
wandb: Run data is saved locally in /zhome/03/c/164482/code/herd/wandb/run-20231102_145211-6e9p5axd
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run molora/expert_14
wandb: ⭐️ View project at https://wandb.ai/alexrs95/herd-llama
wandb: 🚀 View run at https://wandb.ai/alexrs95/herd-llama/runs/6e9p5axd
  0%|          | 0/558 [00:00<?, ?it/s]You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
  0%|          | 1/558 [00:11<1:45:35, 11.37s/it]  0%|          | 2/558 [00:17<1:15:34,  8.15s/it]  1%|          | 3/558 [00:23<1:05:55,  7.13s/it]  1%|          | 4/558 [00:29<1:01:23,  6.65s/it]  1%|          | 5/558 [00:35<58:52,  6.39s/it]    1%|          | 6/558 [00:40<57:19,  6.23s/it]  1%|▏         | 7/558 [00:46<56:19,  6.13s/it]  1%|▏         | 8/558 [00:52<55:40,  6.07s/it]  2%|▏         | 9/558 [00:58<55:12,  6.03s/it]  2%|▏         | 10/558 [01:04<54:52,  6.01s/it]                                                  2%|▏         | 10/558 [01:04<54:52,  6.01s/it]  2%|▏         | 11/558 [01:10<54:37,  5.99s/it]  2%|▏         | 12/558 [01:16<54:25,  5.98s/it]  2%|▏         | 13/558 [01:22<54:15,  5.97s/it]  3%|▎         | 14/558 [01:28<54:07,  5.97s/it]  3%|▎         | 15/558 [01:34<54:00,  5.97s/it]  3%|▎         | 16/558 [01:40<53:54,  5.97s/it]  3%|▎         | 17/558 [01:46<53:48,  5.97s/it]  3%|▎         | 18/558 [01:52<53:42,  5.97s/it]  3%|▎         | 19/558 [01:58<53:36,  5.97s/it]  4%|▎         | 20/558 [02:04<53:30,  5.97s/it]                                                  4%|▎         | 20/558 [02:04<53:30,  5.97s/it]  4%|▍         | 21/558 [02:10<53:25,  5.97s/it]  4%|▍         | 22/558 [02:16<53:20,  5.97s/it]  4%|▍         | 23/558 [02:22<53:14,  5.97s/it]  4%|▍         | 24/558 [02:28<53:08,  5.97s/it]  4%|▍         | 25/558 [02:34<53:03,  5.97s/it]  5%|▍         | 26/558 [02:40<52:57,  5.97s/it]  5%|▍         | 27/558 [02:46<52:50,  5.97s/it]  5%|▌         | 28/558 [02:52<52:46,  5.97s/it]  5%|▌         | 29/558 [02:58<52:40,  5.97s/it]  5%|▌         | 30/558 [03:04<52:34,  5.98s/it]                                                  5%|▌         | 30/558 [03:04<52:34,  5.98s/it]  6%|▌         | 31/558 [03:10<52:29,  5.98s/it]  6%|▌         | 32/558 [03:16<52:23,  5.98s/it]  6%|▌         | 33/558 [03:22<52:17,  5.98s/it]  6%|▌         | 34/558 [03:27<52:11,  5.98s/it]  6%|▋         | 35/558 [03:33<52:05,  5.98s/it]  6%|▋         | 36/558 [03:39<52:00,  5.98s/it]  7%|▋         | 37/558 [03:45<51:54,  5.98s/it]  7%|▋         | 38/558 [03:51<51:48,  5.98s/it]  7%|▋         | 39/558 [03:57<51:43,  5.98s/it]  7%|▋         | 40/558 [04:03<51:37,  5.98s/it]                                                  7%|▋         | 40/558 [04:03<51:37,  5.98s/it]  7%|▋         | 41/558 [04:08<48:06,  5.58s/it]  8%|▊         | 42/558 [04:15<50:58,  5.93s/it]  8%|▊         | 43/558 [04:21<50:59,  5.94s/it]  8%|▊         | 44/558 [04:27<51:00,  5.95s/it]  8%|▊         | 45/558 [04:33<50:57,  5.96s/it]  8%|▊         | 46/558 [04:39<50:56,  5.97s/it]  8%|▊         | 47/558 [04:45<50:51,  5.97s/it]  9%|▊         | 48/558 [04:51<50:46,  5.97s/it]  9%|▉         | 49/558 [04:57<50:41,  5.98s/it]  9%|▉         | 50/558 [05:03<50:35,  5.98s/it]                                                  9%|▉         | 50/558 [05:03<50:35,  5.98s/it]  9%|▉         | 51/558 [05:09<50:30,  5.98s/it]  9%|▉         | 52/558 [05:15<50:24,  5.98s/it]  9%|▉         | 53/558 [05:21<50:19,  5.98s/it] 10%|▉         | 54/558 [05:27<50:13,  5.98s/it] 10%|▉         | 55/558 [05:32<50:07,  5.98s/it] 10%|█         | 56/558 [05:38<50:01,  5.98s/it] 10%|█         | 57/558 [05:44<49:55,  5.98s/it] 10%|█         | 58/558 [05:50<49:49,  5.98s/it] 11%|█         | 59/558 [05:56<49:43,  5.98s/it] 11%|█         | 60/558 [06:02<49:37,  5.98s/it]                                                 11%|█         | 60/558 [06:02<49:37,  5.98s/it] 11%|█         | 61/558 [06:08<49:31,  5.98s/it] 11%|█         | 62/558 [06:14<49:25,  5.98s/it] 11%|█▏        | 63/558 [06:20<49:19,  5.98s/it] 11%|█▏        | 64/558 [06:26<49:13,  5.98s/it] 12%|█▏        | 65/558 [06:32<49:08,  5.98s/it] 12%|█▏        | 66/558 [06:38<49:02,  5.98s/it] 12%|█▏        | 67/558 [06:44<48:55,  5.98s/it] 12%|█▏        | 68/558 [06:50<48:50,  5.98s/it] 12%|█▏        | 69/558 [06:56<48:44,  5.98s/it] 13%|█▎        | 70/558 [07:02<48:38,  5.98s/it]                                                 13%|█▎        | 70/558 [07:02<48:38,  5.98s/it] 13%|█▎        | 71/558 [07:08<48:32,  5.98s/it] 13%|█▎        | 72/558 [07:14<48:26,  5.98s/it] 13%|█▎        | 73/558 [07:20<48:20,  5.98s/it] 13%|█▎        | 74/558 [07:26<48:14,  5.98s/it] 13%|█▎        | 75/558 [07:32<48:08,  5.98s/it] 14%|█▎        | 76/558 [07:38<48:02,  5.98s/it] 14%|█▍        | 77/558 [07:44<47:56,  5.98s/it] 14%|█▍        | 78/558 [07:50<47:50,  5.98s/it] 14%|█▍        | 79/558 [07:56<47:44,  5.98s/it] 14%|█▍        | 80/558 [08:02<47:38,  5.98s/it]                                                 14%|█▍        | 80/558 [08:02<47:38,  5.98s/it] 15%|█▍        | 81/558 [08:08<47:32,  5.98s/it] 15%|█▍        | 82/558 [08:13<44:18,  5.58s/it]                                                 15%|█▍        | 82/558 [08:13<44:18,  5.58s/it] 15%|█▍        | 82/558 [08:13<47:45,  6.02s/it]
wandb: Waiting for W&B process to finish... (success).
wandb: - 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: \ 0.005 MB of 0.017 MB uploaded (0.000 MB deduped)wandb: | 0.005 MB of 0.018 MB uploaded (0.000 MB deduped)wandb: / 0.018 MB of 0.018 MB uploaded (0.000 MB deduped)wandb: 
wandb: Run history:
wandb:                    train/epoch ▁▁▁▂▇▇███
wandb:              train/global_step ▁▂▃▄▅▆▇██
wandb:            train/learning_rate ▁▁▁▁▁▁▁▁
wandb:                     train/loss ████▂▁▁▂
wandb:               train/total_flos ▁
wandb:               train/train_loss ▁
wandb:            train/train_runtime ▁
wandb: train/train_samples_per_second ▁
wandb:   train/train_steps_per_second ▁
wandb: 
wandb: Run summary:
wandb:                    train/epoch 1.15
wandb:              train/global_step 82
wandb:            train/learning_rate 0.0003
wandb:                     train/loss 0.497
wandb:               train/total_flos 2.6552912469295104e+16
wandb:               train/train_loss 0.68316
wandb:            train/train_runtime 496.1992
wandb: train/train_samples_per_second 4.502
wandb:   train/train_steps_per_second 1.125
wandb: 
wandb: 🚀 View run molora/expert_14 at: https://wandb.ai/alexrs95/herd-llama/runs/6e9p5axd
wandb: ️⚡ View job at https://wandb.ai/alexrs95/herd-llama/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjk5NjEyNzE2/version_details/v15
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20231102_145211-6e9p5axd/logs
