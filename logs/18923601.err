Loaded module: cuda/11.6
Loaded dependency [python3/3.11.4]: gcc/12.3.0-binutils-2.40
Loaded dependency [python3/3.11.4]: sqlite3/3.42.0
Loaded module: python3/3.11.4

Loading python3/3.11.4
  Loading requirement: gcc/12.3.0-binutils-2.40 sqlite3/3.42.0
Found cached dataset parquet (/work3/s212722/herd/datasets/cache/alexrs___parquet/alexrs--alpaca-cleaned-30-clusters-a73d614e768ecc90/0.0.0/14a00e99c0d15a23649d0db8944380ac81082d4b021f398733dd84f3a6c569a7)
Filter:   0%|          | 0/51760 [00:00<?, ? examples/s]Filter:  14%|█▎        | 7000/51760 [00:00<00:00, 54816.45 examples/s]Filter:  27%|██▋       | 14000/51760 [00:00<00:00, 57288.87 examples/s]Filter:  41%|████      | 21000/51760 [00:00<00:00, 58979.10 examples/s]Filter:  54%|█████▍    | 28000/51760 [00:00<00:00, 58981.61 examples/s]Filter:  70%|██████▉   | 36000/51760 [00:00<00:00, 59415.98 examples/s]Filter:  83%|████████▎ | 43000/51760 [00:00<00:00, 59714.69 examples/s]Filter:  97%|█████████▋| 50000/51760 [00:00<00:00, 59060.81 examples/s]                                                                       2023-10-28 20:45:54.065 | INFO     | herd.finetune_utils:get_peft_config:30 - Fine-tuning with MoLoRA using 30 experts
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:03<00:03,  3.28s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.10s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.28s/it]
2023-10-28 20:46:00.317 | WARNING  | herd.finetune:_finetune_experts:174 - Number of experts is not 1 but we are training an expert, setting it to 1. num_experts: 1
/zhome/03/c/164482/code/herd/.venv/lib/python3.11/site-packages/trl/trainer/utils.py:246: UserWarning: The passed formatting_func has more than one argument. Usually that function should have a single argument `example` which corresponds to the dictonnary returned by each element of the dataset. Make sure you know what you are doing.
  warnings.warn(
2023-10-28 20:46:34.086 | INFO     | herd.finetune:_finetune_experts:206 - Training expert: expert_15, output_dir: /work3/s212722/herd/meta-llama/Llama-2-7b-hf/alpaca-30/all_linear_paged_adam_4bit/molora/expert_15
wandb: Currently logged in as: alexrs95. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.12 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.10
wandb: Run data is saved locally in /zhome/03/c/164482/code/herd/wandb/run-20231028_204635-9ls6ynve
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run molora/expert_15
wandb: ⭐️ View project at https://wandb.ai/alexrs95/herd-llama
wandb: 🚀 View run at https://wandb.ai/alexrs95/herd-llama/runs/9ls6ynve
  0%|          | 0/498 [00:00<?, ?it/s]You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
  0%|          | 1/498 [00:11<1:38:39, 11.91s/it]  0%|          | 2/498 [00:22<1:34:00, 11.37s/it]  1%|          | 3/498 [00:33<1:32:28, 11.21s/it]  1%|          | 4/498 [00:44<1:31:44, 11.14s/it]  1%|          | 5/498 [00:56<1:31:17, 11.11s/it]  1%|          | 6/498 [01:07<1:31:00, 11.10s/it]  1%|▏         | 7/498 [01:18<1:30:45, 11.09s/it]  2%|▏         | 8/498 [01:29<1:30:33, 11.09s/it]  2%|▏         | 9/498 [01:40<1:30:22, 11.09s/it]  2%|▏         | 10/498 [01:51<1:30:12, 11.09s/it]                                                    2%|▏         | 10/498 [01:51<1:30:12, 11.09s/it]  2%|▏         | 11/498 [02:02<1:30:02, 11.09s/it]  2%|▏         | 12/498 [02:13<1:29:50, 11.09s/it]  3%|▎         | 13/498 [02:24<1:29:38, 11.09s/it]  3%|▎         | 14/498 [02:35<1:29:27, 11.09s/it]  3%|▎         | 15/498 [02:46<1:29:16, 11.09s/it]  3%|▎         | 16/498 [02:57<1:29:05, 11.09s/it]  3%|▎         | 17/498 [03:09<1:28:54, 11.09s/it]  4%|▎         | 18/498 [03:20<1:28:43, 11.09s/it]  4%|▍         | 19/498 [03:31<1:28:32, 11.09s/it]  4%|▍         | 20/498 [03:42<1:28:21, 11.09s/it]                                                    4%|▍         | 20/498 [03:42<1:28:21, 11.09s/it]  4%|▍         | 21/498 [03:53<1:28:11, 11.09s/it]  4%|▍         | 22/498 [04:04<1:28:02, 11.10s/it]  5%|▍         | 23/498 [04:15<1:27:15, 11.02s/it]  5%|▍         | 24/498 [04:26<1:27:14, 11.04s/it]  5%|▌         | 25/498 [04:37<1:27:11, 11.06s/it]  5%|▌         | 26/498 [04:48<1:27:05, 11.07s/it]  5%|▌         | 27/498 [04:59<1:26:57, 11.08s/it]  6%|▌         | 28/498 [05:10<1:26:49, 11.08s/it]  6%|▌         | 29/498 [05:21<1:26:39, 11.09s/it]  6%|▌         | 30/498 [05:33<1:26:30, 11.09s/it]                                                    6%|▌         | 30/498 [05:33<1:26:30, 11.09s/it]  6%|▌         | 31/498 [05:44<1:26:19, 11.09s/it]  6%|▋         | 32/498 [05:55<1:26:09, 11.09s/it]  7%|▋         | 33/498 [06:06<1:25:58, 11.09s/it]  7%|▋         | 34/498 [06:17<1:25:48, 11.10s/it]  7%|▋         | 35/498 [06:28<1:25:37, 11.10s/it]  7%|▋         | 36/498 [06:39<1:25:26, 11.10s/it]  7%|▋         | 37/498 [06:50<1:25:15, 11.10s/it]  8%|▊         | 38/498 [07:01<1:25:04, 11.10s/it]  8%|▊         | 39/498 [07:12<1:24:53, 11.10s/it]  8%|▊         | 40/498 [07:24<1:24:42, 11.10s/it]                                                    8%|▊         | 40/498 [07:24<1:24:42, 11.10s/it]  8%|▊         | 41/498 [07:35<1:24:31, 11.10s/it]  8%|▊         | 42/498 [07:46<1:24:20, 11.10s/it]  9%|▊         | 43/498 [07:57<1:24:08, 11.10s/it]  9%|▉         | 44/498 [08:08<1:23:57, 11.10s/it]  9%|▉         | 45/498 [08:18<1:20:54, 10.72s/it]                                                    9%|▉         | 45/498 [08:18<1:20:54, 10.72s/it]  9%|▉         | 45/498 [08:18<1:23:42, 11.09s/it]
wandb: Waiting for W&B process to finish... (success).
wandb: 
wandb: Run history:
wandb:                    train/epoch ▁▁███
wandb:              train/global_step ▁▃▅▇█
wandb:            train/learning_rate ▁▁▁▁
wandb:                     train/loss ██▃▁
wandb:               train/total_flos ▁
wandb:               train/train_loss ▁
wandb:            train/train_runtime ▁
wandb: train/train_samples_per_second ▁
wandb:   train/train_steps_per_second ▁
wandb: 
wandb: Run summary:
wandb:                    train/epoch 1.09
wandb:              train/global_step 45
wandb:            train/learning_rate 0.0003
wandb:                     train/loss 0.4629
wandb:               train/total_flos 2.915933332517683e+16
wandb:               train/train_loss 0.64065
wandb:            train/train_runtime 501.1998
wandb: train/train_samples_per_second 7.957
wandb:   train/train_steps_per_second 0.994
wandb: 
wandb: 🚀 View run molora/expert_15 at: https://wandb.ai/alexrs95/herd-llama/runs/9ls6ynve
wandb: ️⚡ View job at https://wandb.ai/alexrs95/herd-llama/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjk5NjEyNzE2/version_details/v13
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20231028_204635-9ls6ynve/logs
