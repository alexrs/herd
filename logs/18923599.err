Loaded module: cuda/11.6
Loaded dependency [python3/3.11.4]: gcc/12.3.0-binutils-2.40
Loaded dependency [python3/3.11.4]: sqlite3/3.42.0
Loaded module: python3/3.11.4

Loading python3/3.11.4
  Loading requirement: gcc/12.3.0-binutils-2.40 sqlite3/3.42.0
Found cached dataset parquet (/work3/s212722/herd/datasets/cache/alexrs___parquet/alexrs--alpaca-cleaned-30-clusters-a73d614e768ecc90/0.0.0/14a00e99c0d15a23649d0db8944380ac81082d4b021f398733dd84f3a6c569a7)
Filter:   0%|          | 0/51760 [00:00<?, ? examples/s]Filter:  12%|█▏        | 6000/51760 [00:00<00:00, 51772.05 examples/s]Filter:  23%|██▎       | 12000/51760 [00:00<00:00, 55298.90 examples/s]Filter:  37%|███▋      | 19000/51760 [00:00<00:00, 56865.99 examples/s]Filter:  48%|████▊     | 25000/51760 [00:00<00:00, 56431.81 examples/s]Filter:  60%|█████▉    | 31000/51760 [00:00<00:00, 56975.30 examples/s]Filter:  75%|███████▌  | 39000/51760 [00:00<00:00, 51402.52 examples/s]Filter:  87%|████████▋ | 45000/51760 [00:00<00:00, 52108.44 examples/s]Filter:  99%|█████████▊| 51000/51760 [00:00<00:00, 53052.64 examples/s]                                                                       2023-10-28 20:38:51.729 | INFO     | herd.finetune_utils:get_peft_config:30 - Fine-tuning with MoLoRA using 30 experts
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:03<00:03,  3.30s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.11s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:04<00:00,  2.29s/it]
2023-10-28 20:38:58.009 | WARNING  | herd.finetune:_finetune_experts:174 - Number of experts is not 1 but we are training an expert, setting it to 1. num_experts: 1
/zhome/03/c/164482/code/herd/.venv/lib/python3.11/site-packages/trl/trainer/utils.py:246: UserWarning: The passed formatting_func has more than one argument. Usually that function should have a single argument `example` which corresponds to the dictonnary returned by each element of the dataset. Make sure you know what you are doing.
  warnings.warn(
2023-10-28 20:39:31.601 | INFO     | herd.finetune:_finetune_experts:206 - Training expert: expert_13, output_dir: /work3/s212722/herd/meta-llama/Llama-2-7b-hf/alpaca-30/all_linear_paged_adam_4bit/molora/expert_13
wandb: Currently logged in as: alexrs95. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.12 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.10
wandb: Run data is saved locally in /zhome/03/c/164482/code/herd/wandb/run-20231028_203933-mka4njdu
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run molora/expert_13
wandb: ⭐️ View project at https://wandb.ai/alexrs95/herd-llama
wandb: 🚀 View run at https://wandb.ai/alexrs95/herd-llama/runs/mka4njdu
  0%|          | 0/324 [00:00<?, ?it/s]You're using a LlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
`use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`...
  0%|          | 1/324 [00:11<1:03:37, 11.82s/it]  1%|          | 2/324 [00:22<1:00:51, 11.34s/it]  1%|          | 3/324 [00:33<59:53, 11.20s/it]    1%|          | 4/324 [00:44<59:23, 11.14s/it]  2%|▏         | 5/324 [00:55<59:03, 11.11s/it]  2%|▏         | 6/324 [01:07<58:48, 11.10s/it]  2%|▏         | 7/324 [01:18<58:35, 11.09s/it]  2%|▏         | 8/324 [01:29<58:23, 11.09s/it]  3%|▎         | 9/324 [01:40<58:12, 11.09s/it]  3%|▎         | 10/324 [01:51<58:02, 11.09s/it]                                                  3%|▎         | 10/324 [01:51<58:02, 11.09s/it]  3%|▎         | 11/324 [02:02<57:52, 11.09s/it]  4%|▎         | 12/324 [02:13<57:41, 11.10s/it]  4%|▍         | 13/324 [02:24<57:31, 11.10s/it]  4%|▍         | 14/324 [02:31<51:15,  9.92s/it]  5%|▍         | 15/324 [02:43<54:21, 10.55s/it]  5%|▍         | 16/324 [02:54<55:01, 10.72s/it]  5%|▌         | 17/324 [03:06<55:25, 10.83s/it]  6%|▌         | 18/324 [03:17<55:38, 10.91s/it]  6%|▌         | 19/324 [03:28<55:44, 10.97s/it]  6%|▌         | 20/324 [03:39<55:45, 11.00s/it]                                                  6%|▌         | 20/324 [03:39<55:45, 11.00s/it]  6%|▋         | 21/324 [03:50<55:42, 11.03s/it]  7%|▋         | 22/324 [04:01<55:37, 11.05s/it]  7%|▋         | 23/324 [04:12<55:30, 11.07s/it]  7%|▋         | 24/324 [04:23<55:22, 11.08s/it]  8%|▊         | 25/324 [04:34<55:13, 11.08s/it]  8%|▊         | 26/324 [04:45<55:03, 11.09s/it]  8%|▊         | 27/324 [04:57<54:53, 11.09s/it]  9%|▊         | 28/324 [05:04<48:56,  9.92s/it]                                                  9%|▊         | 28/324 [05:04<48:56,  9.92s/it]  9%|▊         | 28/324 [05:04<53:43, 10.89s/it]
wandb: Waiting for W&B process to finish... (success).
wandb: - 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: \ 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: | 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: / 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: - 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: \ 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: | 0.005 MB of 0.005 MB uploaded (0.000 MB deduped)wandb: 
wandb: Run history:
wandb:                    train/epoch ▁██
wandb:              train/global_step ▁▅█
wandb:            train/learning_rate ▁▁
wandb:                     train/loss █▁
wandb:               train/total_flos ▁
wandb:               train/train_loss ▁
wandb:            train/train_runtime ▁
wandb: train/train_samples_per_second ▁
wandb:   train/train_steps_per_second ▁
wandb: 
wandb: Run summary:
wandb:                    train/epoch 1.09
wandb:              train/global_step 28
wandb:            train/learning_rate 0.0003
wandb:                     train/loss 0.6313
wandb:               train/total_flos 1.7756242080694272e+16
wandb:               train/train_loss 0.63981
wandb:            train/train_runtime 307.6086
wandb: train/train_samples_per_second 8.446
wandb:   train/train_steps_per_second 1.053
wandb: 
wandb: 🚀 View run molora/expert_13 at: https://wandb.ai/alexrs95/herd-llama/runs/mka4njdu
wandb: ️⚡ View job at https://wandb.ai/alexrs95/herd-llama/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjk5NjEyNzE2/version_details/v13
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20231028_203933-mka4njdu/logs
